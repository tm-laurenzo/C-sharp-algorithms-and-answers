using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;

namespace TuringAlgorithms
{
    public class Program
    {
        public static void Main(string[] args)
        {
           /*Write a simple parser that will parse and run Deadfish.

	     Deadfish has 4 commands, each 1 character long:

             i increments the value (initially 0)
             d decrements the value
             s squares the value
             o outputs the value into the return array
             Invalid characters should be ignored.

             Deadfish("iiisdoso") => new int[] {8, 64};
             Deadfish("iiisdosodddddiso") => new int[] {8, 64, 3600};
           */
            
        }
    
        public static int[] DeadFish(string data)
        {

            //01 create a variable to store the current number which starts at 0 
            //02 create a second vairable to store the list of outputs
            //03 Loop through the string 
            //04 use if and else if to check the value of the current iteration and make adjustment to the current number
            //05 return the output in an array form
            int currentNumber = 0;

            List<int> answereList = new List<int>();

            foreach (var item in data)
            {
                if(item == 'i')
                {
                    currentNumber++;
                }
                else if (item == 'd')
                {
                    currentNumber--;
                }
                else if (item == 's')
                {
                    currentNumber *= currentNumber;
                }
                else if (item == 'o')
                {
                    answereList.Add(currentNumber);
                }

            }

            return answereList.ToArray();
        }




      
   }
}






































